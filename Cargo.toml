[package]
name = "pass-it-on"
version = "0.11.0"
authors = ["Kevin Wheelans <kevin.wheelans@proton.me>"]
edition = "2021"
rust-version = "1.70"
description = "A library that provides a simple notification client and server that receives messages and passes them on to endpoints"
documentation = "https://docs.rs/crate/pass-it-on"
homepage = "https://github.com/kwheelans/pass-it-on"
license = "MIT"
keywords = ["notify", "notification", "server", "client"]
readme = "README.md"
repository = "https://github.com/kwheelans/pass-it-on"


[package.metadata.docs.rs]
all-features = true

[features]
default = ["server-bin-full","client"]
client = ["interfaces", "tokio", "tokio/signal", "tokio/time", "dep:log"]
discord = ["endpoints", "dep:log", "reqwest"]
email = ["endpoints", "dep:log", "dep:mail-send"]
endpoints = ["dep:async-trait","dep:dyn-clone", "dep:typetag"]
file = ["endpoints", "dep:log", "tokio/io-util"]
http = ["http-client", "http-server"]
http-client = ["interfaces", "reqwest", "dep:url", "dep:log"]
http-server = ["interfaces", "dep:url", "dep:warp", "dep:log"]
interfaces = ["dep:async-trait","dep:dyn-clone", "dep:typetag"]
matrix = ["endpoints", "dep:log", "dep:matrix-sdk"]
parse-cfg = ["dep:toml"]
pipe = ["pipe-client", "pipe-server"]
pipe-client = ["interfaces", "dep:log", "dep:nix", "tokio/io-util"]
pipe-server = ["interfaces", "dep:log", "dep:nix","tokio/io-util"]
server = ["interfaces", "endpoints", "tokio", "tokio/signal", "tokio/time", "dep:log"]
server-bin-full = ["server-bin-minimal", "pipe", "http", "file", "matrix", "discord", "email"]
server-bin-minimal = ["server", "parse-cfg", "dep:clap", "dep:directories", "dep:simple_logger"]
vendored-tls = ["reqwest/native-tls-vendored"]

[dependencies]
async-trait = { version = "0.1", optional = true }
blake3 = "1"
clap  = { version = "4.4", features = ["derive", "cargo"], optional = true }
directories = { version = "5.0", optional = true }
dyn-clone = { version = "1.0", optional = true }
log = { version = "0.4", optional = true }
mail-send = { version = "0.4", optional = true }
matrix-sdk = { version = "0.6", optional = true }
nix = { version = "0.27", features = ["fs", "net"], default-features = false, optional = true }
reqwest = { version = "0.11", optional = true }
serde = { version = "1", features = ["default", "derive"] }
serde_json = "1"
simple_logger = { version = "4.2", optional = true }
thiserror = "1"
tokio = { version = "1", features = ["sync", "macros", "rt-multi-thread"], default-features = false, optional = true }
toml = { version = "0.8", features = ["parse"], default-features = false, optional = true }
typetag = { version = "0.2", optional = true }
url = { version = "2.4", optional = true }
warp = { version = "0.3", features = ["tls"], optional = true }

[lib]
name = "pass_it_on"
doctest = false

[[bin]]
name = "pass-it-on-server"
required-features = ["server-bin-minimal"]

[[example]]
name = "simple_client"
required-features = ["client", "http-client", "parse-cfg"]

[[test]]
name = "client_configuration_tests"
required-features = ["client", "parse-cfg"]

[[test]]
name = "server_configuration_tests"
required-features = ["server", "http-server", "parse-cfg", "file"]

[profile.release]
lto = true
codegen-units = 1

[package.metadata.cross.target.aarch64-unknown-linux-gnu]
pre-build = [
    "dpkg --add-architecture arm64",
    "apt-get update && apt-get install --assume-yes libssl-dev:arm64",
    "apt-get update && apt-get install --assume-yes libsystemd-dev:arm64"
]
